version: '3'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - LLM_MODEL=${LLM_MODEL}

  db:
    image: postgres:17
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data/

  agent:
    build: .
    command: python gbp_django/utils/automations.py
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    environment:
      # Environment variables specific to the agent
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - HEADLESS=false
      - COOKIES_FILE=/app/browser_cookies/gbp_cookies_agent.txt
      # Ensure any other agent-specific environment variables are provided

volumes:
  postgres_data:
