# Generated by Django 5.1.5 on 2025-01-22 14:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import gbp_django.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("gbp_django", "0004_enable_pgvector"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="automationlog",
            name="business",
        ),
        migrations.RemoveField(
            model_name="automationlog",
            name="user",
        ),
        migrations.RemoveField(
            model_name="task",
            name="approval_token",
        ),
        migrations.RemoveField(
            model_name="task",
            name="content",
        ),
        migrations.RemoveField(
            model_name="task",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="task",
            name="scheduled_for",
        ),
        migrations.RemoveField(
            model_name="task",
            name="type",
        ),
        migrations.RemoveField(
            model_name="task",
            name="user",
        ),
        migrations.AddField(
            model_name="automationlog",
            name="business_id",
            field=models.CharField(
                default="",
                help_text="Associated business ID for this log entry",
                max_length=255,
                validators=[
                    django.core.validators.RegexValidator(
                        "^[a-zA-Z0-9_-]+$", "Valid business ID required"
                    )
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="automationlog",
            name="user_id",
            field=models.CharField(
                default="",
                help_text="User who initiated the action",
                max_length=255,
                validators=[
                    django.core.validators.RegexValidator(
                        "^[a-zA-Z0-9_-]+$", "Valid user ID required"
                    )
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="task",
            name="business",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="gbp_django.business",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="frequency",
            field=models.CharField(
                choices=[
                    ("DAILY", "Daily"),
                    ("WEEKLY", "Weekly"),
                    ("MONTHLY", "Monthly"),
                    ("CUSTOM", "Custom"),
                ],
                default="WEEKLY",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="task",
            name="next_run",
            field=models.DateTimeField(default=django.utils.timezone.now, null=True),
        ),
        migrations.AddField(
            model_name="task",
            name="parameters",
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name="task",
            name="retry_count",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="task",
            name="scheduled_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="task",
            name="scheduled_time",
            field=models.TimeField(
                default=gbp_django.models.Task.default_scheduled_time
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="task_type",
            field=models.CharField(
                choices=[
                    ("POST", "Social Post"),
                    ("PHOTO", "Photo Upload"),
                    ("REVIEW", "Review Monitoring"),
                    ("QA", "Q&A Check"),
                    ("COMPLIANCE", "Compliance Check"),
                ],
                default="POST",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="automationlog",
            name="action_type",
            field=models.CharField(
                choices=[
                    ("FILE_UPLOAD", "File Upload"),
                    ("AUTO_RESPONSE", "Automated Response"),
                    ("SCHEDULED_TASK", "Scheduled Task"),
                    ("SYSTEM_ALERT", "System Alert"),
                ],
                default="FILE_UPLOAD",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="automationlog",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Record creation timestamp"
            ),
        ),
        migrations.AlterField(
            model_name="automationlog",
            name="deleted_at",
            field=models.DateTimeField(
                blank=True, default=None, help_text="Soft delete timestamp", null=True
            ),
        ),
        migrations.AlterField(
            model_name="automationlog",
            name="details",
            field=models.JSONField(
                blank=True,
                help_text="Structured data about the automation event",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="automationlog",
            name="executed_at",
            field=models.DateTimeField(
                blank=True,
                default=None,
                help_text="Timestamp of actual execution",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="automationlog",
            name="status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending"),
                    ("RUNNING", "Running"),
                    ("COMPLETED", "Completed"),
                    ("FAILED", "Failed"),
                ],
                default="PENDING",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending"),
                    ("RUNNING", "Running"),
                    ("COMPLETED", "Completed"),
                    ("FAILED", "Failed"),
                    ("PAUSED", "Paused"),
                ],
                default="PENDING",
                max_length=20,
            ),
        ),
        migrations.AddIndex(
            model_name="automationlog",
            index=models.Index(
                fields=["business_id", "-created_at"],
                name="gbp_django__busines_f0e75a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="automationlog",
            index=models.Index(
                fields=["status", "action_type"], name="gbp_django__status_0675f2_idx"
            ),
        ),
    ]
